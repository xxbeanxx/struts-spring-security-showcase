<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:security="http://www.springframework.org/schema/security"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<security:global-method-security secured-annotations="enabled"/>


	<!-- =================================================================== -->
	<!--        Pre-auth (header) security configuration                     -->
	<!-- =================================================================== -->

		
	<security:authentication-manager alias="preAuthenticationAuthenticationManager">
		<security:authentication-provider ref="preAuthenticatedAuthenticationProvider"/>
	</security:authentication-manager>

	
	<bean id="preAuthenticatedAuthenticationProvider" class="com.github.xxbeanxx.struts.security.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="preAuthenticatedUserDetailsService"/>
			</bean>
		</property>
	</bean>

	
	<bean id="preAuthenticatedUserDetailsService" class="com.github.xxbeanxx.struts.security.PreAuthenticatedUserDetailsService"/>

	
	<bean id="requestHeaderAuthenticationFilter" class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
		<property name="authenticationManager" ref="preAuthenticationAuthenticationManager" />
		<property name="exceptionIfHeaderMissing" value="${security.request-header-authentication-filter.exception-if-header-missing}"/>
		<property name="principalRequestHeader" value="${security.request-header-authentication-filter.principal-request-header}" />
	</bean>

	
	<!-- =================================================================== -->
	<!--        Security context for the production environment              -->
	<!-- =================================================================== -->

		
	<beans profile="production">
		<security:http auto-config="true">
			<security:session-management>
				<security:concurrency-control max-sessions="1"/>
			</security:session-management>
			
			<security:custom-filter position="PRE_AUTH_FILTER" ref="requestHeaderAuthenticationFilter"/>
			
			<security:logout logout-success-url="/index.action" logout-url="/logout"/>
			
			<security:intercept-url pattern="/auth/**" access="isAuthenticated()"/>
			<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
		</security:http>
	</beans>

</beans>