<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:security="http://www.springframework.org/schema/security"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<security:global-method-security secured-annotations="enabled"/>
	

	<security:http auto-config="true">
		<security:custom-filter position="PRE_AUTH_FILTER" ref="requestHeaderAuthenticationFilter" />
		<security:session-management>
			<security:concurrency-control max-sessions="1"/>
		</security:session-management>

		<security:intercept-url pattern="/auth/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
	</security:http>
	
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="preAuthenticatedAuthenticationProvider"/>
		<security:authentication-provider>
			<security:password-encoder ref="bCryptPasswordEncoder"/>
			<security:user-service>
				<security:user name="${user.admin.username}" password="${user.admin.password}" authorities="${user.admin.roles}"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="16" />
	</bean>


	<bean id="requestHeaderAuthenticationFilter" class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="exceptionIfHeaderMissing" value="${security.request-header-authentication-filter.exception-if-header-missing}"/>
		<property name="principalRequestHeader" value="${security.request-header-authentication-filter.principal-request-header}" />
	</bean>


	<bean id="preAuthenticatedAuthenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="preAuthenticatedUserDetailsService"/>
			</bean>
		</property>
	</bean>

	
	<bean id="preAuthenticatedUserDetailsService" class="com.github.xxbeanxx.struts.security.PreAuthenticatedUserDetailsService"/>

</beans>